# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f server/src/requirements.txt ]; then pip install -r server/src/requirements.txt; fi
    - name: Lint python code (flake8)
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint queries.sql
      run: |
        # install sqlfluff
        python -m pip install sqlfluff
        # run tests using .sqlfluff as config
        sqlfluff lint server/src/queries.sql --config .sqlfluff --exclude-rules CP02,AM04,RF02 --dialect sqlite
    - name: Lint schema.sql
      ron: |
        # now schema.sql
        sqlfluff lint server/src/schema.sql --config .sqlfluff --exclude-rules CP02,AM04 --dialect sqlite
   # - name: Test with unittest
   #   run: |
   #     pytest
